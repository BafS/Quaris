swagger: '2.0'
info:
  title: Quaris
  description: Quaris API specification
  version: "0.1.0"
# the domain of the service
host: api.quaris.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /users:
    get:
      summary: Index all users
      description: |
        The Users endpoint returns information about the users. The response includes the display name and the email.
      tags:
        - User
      responses:
        200:
          description: An array of users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{username}:
    get:
      summary: User Information
      description: |
        The User Information endpoint returns information about the given user, its badges and points.
      parameters:
        - name: username
          in: path
          description: A specific User's username
          required: true
          type: string
      tags:
        - User
      responses:
        200:
          description: User object
          schema:
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{username}/badges:
    get:
      summary: User's Badges
      description: TheUser's Badges endpoint returns all the badges the given user has.
      parameters:
        - name: username
          in: path
          description: A specific User's username
          required: true
          type: string
      tags:
        - User
        - Badge
      responses:
        200:
          description: An array of badges
          schema:
            type: array
            items:
              $ref: '#/definitions/Badge'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /badges:
    get:
      summary: All Badges
      description: The Badges endpoint returns information about all the badges existing.
      tags:
        - Badge
      responses:
        200:
          description: Badg information for a user
          schema:
            type: array
            items:
              $ref: '#/definitions/Badge'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a new Badge
      description: Create a new Badge.
      parameters:
        - name: badge
          in: body
          description: Badge to add
          required: true
          schema:
            $ref: '#/definitions/Badge'
      tags:
        - Badge
      responses:
        201:
          description: Badge was created
        409:
          description: Conflict, the badge name already exists
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /leaderboards:
    get:
      summary: Get the given leaderboard
      description: Get the leaderboard (globally if no query)
      parameters:
        - name: badge
          in: query
          description: Leaderboard given a specific badge
          type: string
      responses:
        200:
          description: Users ordered by points
          schema:
            $ref: '#/definitions/Leadersboard'
    
  /me:
    get:
      summary: User Profile
      description: The User Profile endpoint returns information about the Uber user that has authorized with the application.
      tags:
        - User
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

definitions:
  User:
    type: object
    properties:
      username:
        type: string
        description: User's username. Unique identifier.
      email:
        type: string
        description: User's email. Unique identifier.
      password:
        type: string
        description: Hashed password.
  Badge:
    type: object
    properties:
      name:
        type: string
        description: Unique identifier representing the badge name.
      description:
        type: string
        description: Badge description
  Leadersboard:
    type: object
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/User'
  Profile:
    type: object
    properties:
      username:
        type: string
        description: Username of the user.
      email:
        type: string
        description: Email of the user.
      points:
        type: integer
        format: int32
        description: User's points.
      badges:
        type: array
        items:
          $ref: '#/definitions/Badge'
        description: Badges

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
